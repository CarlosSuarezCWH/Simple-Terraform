name: 🗑️ Destroy Infrastructure

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: "Type 'DESTROY-PROD' to confirm"
        required: true
        default: "CANCEL"

env:
  TF_IN_AUTOMATION: true  # Critical for CI/CD
  TF_CLI_ARGS: "-no-color"  # Cleaner logs

jobs:
  destroy:
    if: github.event.inputs.confirmation == 'DESTROY-PROD'
    runs-on: ubuntu-latest
    environment: production  # Requires environment protection rules
    permissions:
      contents: read
      id-token: write  # Required for AWS OIDC if using it

    steps:
      - name: 🛑 Check Destruction Scope
        run: |
          echo "⚠️ WARNING: This will DESTROY ALL RESOURCES in ${AWS_DEFAULT_REGION}"
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Triggered by: $GITHUB_ACTOR"

      - name: 🔍 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for Terraform may be needed

      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.0"  # Pin your version
          terraform_wrapper: false

      - name: 🔑 AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: 🏗️ Terraform Init
        run: terraform init -input=false -backend-config="bucket=your-tf-state-bucket"

      - name: 🕵️♂️ Terraform Plan (Destroy)
        run: terraform plan -destroy -input=false -out=destroy.plan

      - name: 🧨 Terraform Destroy
        run: terraform apply -input=false -auto-approve destroy.plan

      - name: 📝 Destruction Report
        if: always()
        run: |
          echo "=== Destruction Summary ==="
          terraform show -no-color destroy.plan 2>/dev/null || echo "No plan file found"
          echo "=========================="